@include <stdapp.goh>
@include <iacp.goh>
#include <token.h>
#include <Ansi/string.h>
#include <Ansi/stdio.h>

/* Lock and unlock resources pointed to by an optr. *******************/
#define LOCK(o)    (MemLock(OptrToHandle(o)), LMemDeref(o))
#define UNLOCK(o)  MemUnlock(OptrToHandle(o))
#define TOKEN_CHARS_fixed(a,b,c,d)\
            TOKEN_CHARS((dword)(a),(dword)(b),(dword)(c),(dword)(d))

@define dup(obj) ConstructOptr(OptrToHandle(oself), OptrToChunk(obj))

typedef ByteEnum FilterType;
#define FT_APPS 0
#define FT_NB_APPS 1

typedef WordFlags OptionsType;
#define REMOVE_ON              0x0001
#define EXIT_AFTER_LAUNCH      0x0002
#define SBC_ICON               0x0004
#define SBC_TEXT               0x0008
#define SBC_ICON_AND_TEXT      0x0010
#define SBC_BIG_ICON_AND_TEXT  0x0020
#define MINI_MODE              0x0040

typedef char   strbuf[127];
typedef char   shortstr[33];

/* Struktur um Pfade vom Heap zu kriegen... */
typedef struct {
   /* Fuer FileSelector ----------------------------------------------------*/
   DiskHandle      dh;
   char            dirn[PATH_BUFFER_SIZE + FILE_LONGNAME_BUFFER_SIZE];
   char            fname[PATH_BUFFER_SIZE + FILE_LONGNAME_BUFFER_SIZE];

   /* Vom FileManager an den BM ubergebene Datei ---------------------------*/
   DiskHandle      datadh;
   char            datadirn[PATH_BUFFER_SIZE + FILE_LONGNAME_BUFFER_SIZE];
   char            datafname[PATH_BUFFER_SIZE + FILE_LONGNAME_BUFFER_SIZE];
} FilesStruct;
