#include <geos.h>
#include <stdio.h>
#include <Ansi/stdlib.h>
#include <Ansi/string.h>
#include "zlib.h"

#include "file.h"
#include "heap.h"

#pragma pack(push, 1)

struct ChunkHeader {
    unsigned long dataSize;
    unsigned long chunkType;
};

struct IHDRChunk {
    unsigned long Width;
    unsigned long Height;
    unsigned char BitDepth;
    unsigned char ColorType;
    unsigned char Compression;
    unsigned char Filter;
    unsigned char Interlace;
};

#pragma pack(pop)

#define HEADER_CHUNK 0x52444849  // 'IHDR' in little-endian
#define IMAGE_DATA_CHUNK 0x54414449  // 'IDAT' in little-endian
#define END_CHUNK 0x444E4549  // 'IEND' in little-endian

enum LineFilter {
    LFNone = 0,
    LFSub = 1,
    LFUp = 2,
    LFAverage = 3,
    LFPaeth = 4
};

#define CHUNK_SIZE 8192  // Size for reading chunks
#define DECOMPRESSED_CHUNK_SIZE (width * bpp + 1) * height  // Size for decompressed data (approximated)

unsigned long swapEndian(unsigned long val);
int abs(int x);
void unfilterImage(unsigned char *imageDataPtr, unsigned long width, unsigned long height, unsigned char bpp);
void writePPM(const char *filename, unsigned char *imageData, unsigned long width, unsigned long height, unsigned char bpp);
int _pascal convertPNG();
