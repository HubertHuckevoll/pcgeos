/*======================================================================
  qoiimp.goh â€” Public header for the QOI bitmap importer / exporter
  (true-color)
 *======================================================================*/
#ifndef __QOILIB_GOH__
#define __QOILIB_GOH__

#include <geos.h>
#include <file.h>
#include <vm.h>

/* Error codes */
typedef enum
{
    QE_NO_ERROR = 0,
    QE_CANT_OPEN_SOURCE_FILE,
    QE_INVALID_FILE,
    QE_WRONG_FILE_FORMAT,
    QE_OUT_OF_MEMORY,
    QE_OUT_OF_DATA,
    QE_BLOCK_LOCK_FAILURE
} QoiError;

/*======================== QOI constants/structs =======================*/

#define QOI_MAGIC_0 'q'
#define QOI_MAGIC_1 'o'
#define QOI_MAGIC_2 'i'
#define QOI_MAGIC_3 'f'

#define QOI_OP_INDEX  0x00 /* .. 0x3f */
#define QOI_OP_DIFF   0x40 /* .. 0x7f */
#define QOI_OP_LUMA   0x80 /* .. 0xbf */
#define QOI_OP_RUN    0xc0 /* .. 0xff */
#define QOI_OP_RGB    0xfe
#define QOI_OP_RGBA   0xff

#define QOI_MASK_2    0xC0

typedef struct
{
    byte  magic[4];      /* "qoif" */
    dword widthBE;       /* big endian */
    dword heightBE;      /* big endian */
    byte  channels;      /* 3 or 4 */
    byte  colorspace;    /* 0 = sRGB w/ linear alpha (use 0) */
} QoiHeaderOnDisk;

typedef struct
{
    byte r, g, b, a;
} QoiRGBA;

typedef struct
{
    VMFileHandle    QOS_file;
    VMBlockHandle   QOS_block;
    word            QOS_width;
    word            QOS_height;
    BMFormat        QOS_format;     /* BMF_24BIT (+BMT_MASK when alpha used) */
    MemHandle       QOS_line;       /* scanline: [mask?][RGB triplets] */
    word            QOS_maskoff;
    word            QOS_stride;     /* bytes per scanline incl. mask */
    Boolean         QOS_hasAlpha;   /* true if any A<255 seen */
    word            QOS_y;
} qoiOutStream;

/* --- Import alpha/Blend controls --- */
extern void _pascal _export
QoiImportSetAlphaThreshold(byte threshold);

extern void _pascal _export
QoiImportSetBlendColor(byte r, byte g, byte b);

extern void _pascal _export
QoiImportSetBlendEnabled(Boolean on);

/* --- QOI import --- */
/* Import QOI by pathname into a VM bitmap in 'destfile'. */
extern VMBlockHandle _pascal _export
QoiImportBitmapFName(PathName srcname, VMFileHandle destfile, QoiError *error);

/* Import QOI by open file handle into a VM bitmap in 'destfile'. */
extern VMBlockHandle _pascal _export
QoiImportBitmapFHandle(FileHandle srcfile, VMFileHandle destfile, QoiError *error);

/* Lightweight probe by pathname: checks the 4-byte magic only. */
extern QoiError _pascal _export
QoiImportTestBitmapFName(PathName srcname);

/* Lightweight probe by handle: checks the 4-byte magic only. */
extern QoiError _pascal _export
QoiImportTestBitmapFHandle(FileHandle srcfile);

/* --- QOI export --- */
extern QoiError _pascal _export
QoiExportBitmapFHandle(VMFileHandle srcfile, VMBlockHandle bmpblock, FileHandle destfile);

#endif /* __QOILIB_GOH__ */
